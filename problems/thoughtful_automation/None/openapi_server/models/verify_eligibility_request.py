from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class VerifyEligibilityRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, carrier_name=None, member_id=None, full_name=None, dob=None):  # noqa: E501
        """VerifyEligibilityRequest - a model defined in OpenAPI

        :param carrier_name: The carrier_name of this VerifyEligibilityRequest.  # noqa: E501
        :type carrier_name: str
        :param member_id: The member_id of this VerifyEligibilityRequest.  # noqa: E501
        :type member_id: str
        :param full_name: The full_name of this VerifyEligibilityRequest.  # noqa: E501
        :type full_name: str
        :param dob: The dob of this VerifyEligibilityRequest.  # noqa: E501
        :type dob: date
        """
        self.openapi_types = {
            'carrier_name': str,
            'member_id': str,
            'full_name': str,
            'dob': date
        }

        self.attribute_map = {
            'carrier_name': 'carrier_name',
            'member_id': 'member_id',
            'full_name': 'full_name',
            'dob': 'dob'
        }

        self._carrier_name = carrier_name
        self._member_id = member_id
        self._full_name = full_name
        self._dob = dob

    @classmethod
    def from_dict(cls, dikt) -> 'VerifyEligibilityRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The verifyEligibility_request of this VerifyEligibilityRequest.  # noqa: E501
        :rtype: VerifyEligibilityRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def carrier_name(self) -> str:
        """Gets the carrier_name of this VerifyEligibilityRequest.


        :return: The carrier_name of this VerifyEligibilityRequest.
        :rtype: str
        """
        return self._carrier_name

    @carrier_name.setter
    def carrier_name(self, carrier_name: str):
        """Sets the carrier_name of this VerifyEligibilityRequest.


        :param carrier_name: The carrier_name of this VerifyEligibilityRequest.
        :type carrier_name: str
        """
        if carrier_name is None:
            raise ValueError("Invalid value for `carrier_name`, must not be `None`")  # noqa: E501

        self._carrier_name = carrier_name

    @property
    def member_id(self) -> str:
        """Gets the member_id of this VerifyEligibilityRequest.


        :return: The member_id of this VerifyEligibilityRequest.
        :rtype: str
        """
        return self._member_id

    @member_id.setter
    def member_id(self, member_id: str):
        """Sets the member_id of this VerifyEligibilityRequest.


        :param member_id: The member_id of this VerifyEligibilityRequest.
        :type member_id: str
        """
        if member_id is None:
            raise ValueError("Invalid value for `member_id`, must not be `None`")  # noqa: E501

        self._member_id = member_id

    @property
    def full_name(self) -> str:
        """Gets the full_name of this VerifyEligibilityRequest.


        :return: The full_name of this VerifyEligibilityRequest.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name: str):
        """Sets the full_name of this VerifyEligibilityRequest.


        :param full_name: The full_name of this VerifyEligibilityRequest.
        :type full_name: str
        """
        if full_name is None:
            raise ValueError("Invalid value for `full_name`, must not be `None`")  # noqa: E501

        self._full_name = full_name

    @property
    def dob(self) -> date:
        """Gets the dob of this VerifyEligibilityRequest.


        :return: The dob of this VerifyEligibilityRequest.
        :rtype: date
        """
        return self._dob

    @dob.setter
    def dob(self, dob: date):
        """Sets the dob of this VerifyEligibilityRequest.


        :param dob: The dob of this VerifyEligibilityRequest.
        :type dob: date
        """
        if dob is None:
            raise ValueError("Invalid value for `dob`, must not be `None`")  # noqa: E501

        self._dob = dob
